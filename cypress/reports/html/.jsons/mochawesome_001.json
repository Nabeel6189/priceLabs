{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-07T16:28:30.792Z",
    "end": "2024-08-07T16:28:36.407Z",
    "duration": 5615,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6350802c-65d0-4726-9167-e1e783084604",
      "title": "",
      "fullFile": "cypress\\e2e\\apiTests\\push_price_status.cy.js",
      "file": "cypress\\e2e\\apiTests\\push_price_status.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1c919e01-089d-4ca9-8f28-11967bc29be5",
          "title": "Validate Sync toggle api",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate enabling the Sync Prices toggle",
              "fullTitle": "Validate Sync toggle api Validate enabling the Sync Prices toggle",
              "timedOut": null,
              "duration": 3831,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let payload = payloadData.push_price_status;\ncy.makeRequest('POST', 'push_price_status', {\n  queryParams: '1722757091324',\n  body: payload\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).property('message').eq('SUCCESS');\n  expect(response.body).property('response').deep.eq(responseData.push_price_status.enableSyncPriceToggleResponseMessage.response);\n});",
              "err": {},
              "uuid": "b4aea047-2449-40f3-8b3a-946e7e54f3f8",
              "parentUUID": "1c919e01-089d-4ca9-8f28-11967bc29be5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate disabling the Sync Prices toggle",
              "fullTitle": "Validate Sync toggle api Validate disabling the Sync Prices toggle",
              "timedOut": null,
              "duration": 319,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let newPayload = _objectSpread(_objectSpread({}, payloadData.push_price_status), {}, {\n  push_status: false\n});\ncy.makeRequest('POST', 'push_price_status', {\n  queryParams: '1722757091324',\n  body: newPayload\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).property('message').eq('SUCCESS');\n  expect(response.body).property('response').deep.eq(responseData.push_price_status.disableSyncPriceToggleResponseMessage.response);\n});",
              "err": {},
              "uuid": "76bcf997-f7e7-4607-b22b-d4f659244ba4",
              "parentUUID": "1c919e01-089d-4ca9-8f28-11967bc29be5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate Sync Prices toggle when the listings_id is incorrect",
              "fullTitle": "Validate Sync toggle api Validate Sync Prices toggle when the listings_id is incorrect",
              "timedOut": null,
              "duration": 287,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let newPayload = _objectSpread(_objectSpread({}, payloadData.push_price_status), {}, {\n  \"listing_id\": 'SUNSETPROPS___533'\n});\ncy.makeRequest('POST', 'push_price_status', {\n  queryParams: '1722757091324',\n  body: newPayload\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).property('message').eq('SUCCESS');\n  expect(response.body).property('response').deep.eq(responseData.push_price_status.noListingError);\n});",
              "err": {},
              "uuid": "82c6be34-9e7f-4f9c-97da-e0b718a8f207",
              "parentUUID": "1c919e01-089d-4ca9-8f28-11967bc29be5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate Sync Prices toggle when the pms_name is incorrect",
              "fullTitle": "Validate Sync toggle api Validate Sync Prices toggle when the pms_name is incorrect",
              "timedOut": null,
              "duration": 280,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let newPayload = _objectSpread(_objectSpread({}, payloadData.push_price_status), {}, {\n  pms_name: 'prm'\n});\ncy.makeRequest('POST', 'push_price_status', {\n  queryParams: '1722757091324',\n  body: newPayload\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).property('message').eq('SUCCESS');\n  expect(response.body).property('response').deep.eq(responseData.push_price_status.noListingError);\n});",
              "err": {},
              "uuid": "06f8e55e-5cc9-4552-b9dd-f36c952a38c9",
              "parentUUID": "1c919e01-089d-4ca9-8f28-11967bc29be5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate Sync Prices toggle when the listing_id is not sent in the payload",
              "fullTitle": "Validate Sync toggle api Validate Sync Prices toggle when the listing_id is not sent in the payload",
              "timedOut": null,
              "duration": 278,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let newPayload = _objectSpread({}, payloadData.push_price_status);\ndelete newPayload.listing_id;\ncy.makeRequest('POST', 'push_price_status', {\n  queryParams: '1722757091324',\n  body: newPayload\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).property('message').eq('SUCCESS');\n  expect(response.body).property('response').deep.eq(responseData.push_price_status.noListingError);\n});",
              "err": {},
              "uuid": "f20d7fee-cba0-4895-b29e-2cff16e9ee33",
              "parentUUID": "1c919e01-089d-4ca9-8f28-11967bc29be5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate Sync Prices toggle when the pms_name is not sent in the payload",
              "fullTitle": "Validate Sync toggle api Validate Sync Prices toggle when the pms_name is not sent in the payload",
              "timedOut": null,
              "duration": 282,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let newPayload = _objectSpread({}, payloadData.push_price_status);\ndelete newPayload.pms_name;\ncy.makeRequest('POST', 'push_price_status', {\n  queryParams: '1722757091324',\n  body: newPayload\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).property('message').eq('SUCCESS');\n  expect(response.body).property('response').deep.eq(responseData.push_price_status.noListingError);\n});",
              "err": {},
              "uuid": "ffc7f818-cb32-46a9-82c0-239858129f9c",
              "parentUUID": "1c919e01-089d-4ca9-8f28-11967bc29be5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate API response for missing query parameters",
              "fullTitle": "Validate Sync toggle api Validate API response for missing query parameters",
              "timedOut": null,
              "duration": 303,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let noParamResponse = _objectSpread(_objectSpread({}, responseData.push_price_status.enableSyncPriceToggleResponseMessage.response), {}, {\n  listing_name: null\n});\ncy.makeRequest('POST', 'push_price_status', {\n  body: payloadData.push_price_status\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).property('message').eq('SUCCESS');\n  expect(response.body).property('response').deep.eq(noParamResponse);\n});",
              "err": {},
              "uuid": "992f7355-631f-40ee-9c88-3cd715e36ba3",
              "parentUUID": "1c919e01-089d-4ca9-8f28-11967bc29be5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b4aea047-2449-40f3-8b3a-946e7e54f3f8",
            "76bcf997-f7e7-4607-b22b-d4f659244ba4",
            "82c6be34-9e7f-4f9c-97da-e0b718a8f207",
            "06f8e55e-5cc9-4552-b9dd-f36c952a38c9",
            "f20d7fee-cba0-4895-b29e-2cff16e9ee33",
            "ffc7f818-cb32-46a9-82c0-239858129f9c",
            "992f7355-631f-40ee-9c88-3cd715e36ba3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5580,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}