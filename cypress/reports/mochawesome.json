{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-07T15:54:48.524Z",
    "end": "2024-08-07T15:55:01.144Z",
    "duration": 12620,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4578f30f-d869-4678-b944-9e5a2e45c5d3",
      "title": "",
      "fullFile": "cypress\\e2e\\apiTests\\add_custom_pricing.cy.js",
      "file": "cypress\\e2e\\apiTests\\add_custom_pricing.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d0ad578e-b57c-48ad-958c-41c3bc763e6b",
          "title": "API Test for Add Custom Pricing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully add custom pricing and return the expected response",
              "fullTitle": "API Test for Add Custom Pricing should successfully add custom pricing and return the expected response",
              "timedOut": null,
              "duration": 11539,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.makeRequest('POST', 'add_custom_pricing', {\n  body: payloadData.add_custom_pricing\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('message', 'SUCCESS');\n  expect(response.body.response).to.have.property('success', 'I prezzi personalizzati sono stati aggiornati.');\n});",
              "err": {},
              "uuid": "86b25047-6fed-454b-bbca-1aad316f16c2",
              "parentUUID": "d0ad578e-b57c-48ad-958c-41c3bc763e6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return an error when required fields are missing",
              "fullTitle": "API Test for Add Custom Pricing should return an error when required fields are missing",
              "timedOut": null,
              "duration": 273,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  \"price\": \"22\",\n  \"reason\": \"test\",\n  \"basePrice\": \"60\"\n};\ncy.makeRequest('POST', 'add_custom_pricing', {\n  body: payload\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('message', 'SUCCESS');\n  expect(response.body.response).to.have.property('message', 'Alloggio non trovato');\n});",
              "err": {},
              "uuid": "855cbd84-2350-4ed8-abb9-8a34eb31ec79",
              "parentUUID": "d0ad578e-b57c-48ad-958c-41c3bc763e6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return an error when invalid values are provided",
              "fullTitle": "API Test for Add Custom Pricing should return an error when invalid values are provided",
              "timedOut": null,
              "duration": 272,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = _objectSpread(_objectSpread({}, payloadData.add_custom_pricing), {}, {\n  \"price\": \"-22\",\n  \"minPrice\": \"-43\",\n  \"maxPrice\": \"-66\",\n  \"startDate\": \"Invalid Date\",\n  \"endDate\": \"Invalid Date\"\n});\ncy.makeRequest('POST', 'add_custom_pricing', {\n  body: payload\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('message', 'SUCCESS');\n  expect(response.body.response).to.have.property('message', 'Il prezzo massimo fisso deve essere maggiore di 0.');\n});",
              "err": {},
              "uuid": "fbff2208-9855-4954-8ff5-ea80844bec3f",
              "parentUUID": "d0ad578e-b57c-48ad-958c-41c3bc763e6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return an error when payload is empty",
              "fullTitle": "API Test for Add Custom Pricing should return an error when payload is empty",
              "timedOut": null,
              "duration": 502,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {};\ncy.makeRequest('POST', 'add_custom_pricing', {\n  body: payload\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('message', 'SUCCESS');\n  expect(response.body.response).to.have.property('message', 'Alloggio non trovato');\n});",
              "err": {},
              "uuid": "1cbb97d1-9c11-498f-8725-1f5da60de044",
              "parentUUID": "d0ad578e-b57c-48ad-958c-41c3bc763e6b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86b25047-6fed-454b-bbca-1aad316f16c2",
            "855cbd84-2350-4ed8-abb9-8a34eb31ec79",
            "fbff2208-9855-4954-8ff5-ea80844bec3f",
            "1cbb97d1-9c11-498f-8725-1f5da60de044"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12586,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}